// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int     @id @default(autoincrement())
  nome            String  @db.VarChar(100)
  email           String  @unique @db.VarChar(100)
  senha           String  @db.VarChar(100)
  cpf             String  @unique @db.VarChar(12)
  ativo           Boolean @default(false)
  usuario_tipo_id Int     @db.Int
  hash_registro   String? @db.VarChar(45)

  usuariotipo UsuarioTipo @relation(fields: [usuario_tipo_id], references: [id], map: "usuario_usuariotipoid_fkey")
}

model UsuarioTipo {
  id      Int       @id @default(autoincrement())
  nome    String    @db.VarChar(100)
  Usuario Usuario[]
}

model Produto {
  id         Int     @id @default(autoincrement())
  nome       String  @db.VarChar(200)
  descricao  String  @db.Text
  codigo     String  @db.VarChar(25)
  valor      Decimal @db.Decimal(10, 2)
  status     Boolean @db.TinyInt
  avaliacao  String  @db.VarChar(5)
  quantidade Int?    @db.Int()

  ProdutoAnexo ProdutoAnexo[]
  VendaItem    VendaItem[]
}

model ProdutoAnexo {
  id         Int     @id @default(autoincrement())
  caminho    String  @db.VarChar(500)
  principal  Boolean @db.TinyInt
  produto_id Int     @db.Int

  produto Produto @relation(fields: [produto_id], references: [id], map: "produto_produto_anexo_id_fkey")
}

model Cliente {
  id              Int               @id @default(autoincrement())
  nome_completo   String            @db.VarChar(120)
  cpf             String            @unique @db.VarChar(11)
  email           String            @unique @db.VarChar(100)
  data_nascimento DateTime          @db.Date
  senha           String            @db.VarChar(100)
  ClienteEndereco ClienteEndereco[]
  Venda           Venda[]
}

model ClienteEndereco {
  id          Int      @id @default(autoincrement())
  cep         String?  @db.VarChar(8)
  logradouro  String?  @db.VarChar(150)
  bairro      String?  @db.VarChar(150)
  cidade      String?  @db.VarChar(150)
  numero      String?  @db.VarChar(150)
  complemento String?  @db.VarChar(150)
  cliente_id  Int      @db.Int
  faturamento Boolean? @db.TinyInt
  excluido Boolean? @db.TinyInt
  entrega Boolean? @db.TinyInt

  venda Venda[]

  cliente Cliente @relation(fields: [cliente_id], references: [id], map: "cliente_cliente_endereco_id_fkey")
}

model Venda {
  id                  Int         @id @default(autoincrement())
  cliente_id          Int         @db.Int
  status              String      @db.VarChar(100)
  cliente_endereco_id Int?
  valor_total         Decimal     @db.Decimal(10, 2)
  valor_frete         Decimal     @db.Decimal(10, 2)
  forma_pagamento     String      @db.VarChar(15)
  VendaItem           VendaItem[]
  data_cadastro       DateTime    @default(now())

  cliente         Cliente          @relation(fields: [cliente_id], references: [id])
  ClienteEndereco ClienteEndereco? @relation(fields: [cliente_endereco_id], references: [id])
}

model VendaItem {
  id         Int @id @default(autoincrement())
  produto_id Int @db.Int
  quantidade Int @db.Int
  venda_id   Int @db.Int

  Venda   Venda?   @relation(fields: [venda_id], references: [id])
  Produto Produto? @relation(fields: [produto_id], references: [id])
}
